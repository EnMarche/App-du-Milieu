name: Codecov
on:
    push:
        branches: [ master ]
    pull_request:
    release:
        types: [ published ]
jobs:
  run:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          architecture: 'x64'

      - name: Get Cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install wheel
          pip install -r requirements.txt

      - name: Generate coverage report
        run: |
          pip install pytest pytest-cov
          pip install codecov && codecov -t ${{ secrets.CODECOV_TOKEN }}
          python -m pytest --cov=./ && codecov -f .\coverage.xml

        env:
          # Google Cloud Env
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          GCP_ZONE: ${{ secrets.GCP_ZONE }}

          # Cloud SQL Env
          SQL_INST: ${{ secrets.SQL_INST_STAGING }}
          DB_READ: ${{ secrets.DB_READ_STAGING }}
          DB_USER: ${{ secrets.DB_USER_STAGING }}
          DB_PASS: ${{ secrets.DB_PASS_STAGING }}
          SQL_INST_PG: ${{ secrets.SQL_INST_PG_STAGING }}
          DB_NAME_PG: ${{ secrets.DB_NAME_PG_STAGING }}
          DB_USER_PG: ${{ secrets.DB_USER_PG_STAGING }}
          DB_PASS_PG: ${{ secrets.DB_PASS_PG_STAGING }}
          CLOUDSQL_CONN_PG: $GCP_PROJECT_ID:$GCP_ZONE:$SQL_INST_PG
          CLOUDSQL_CONN: $GCP_PROJECT_ID:$GCP_ZONE:$SQL_INST

      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v1
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }}
      #     directory: ./
      #     flags: unittests
      #     env_vars: OS,PYTHON
      #     name: codecov-umbrella
      #     fail_ci_if_error: false
      #     path_to_write_report: ./coverage/codecov_report.txt
      #     verbose: true
