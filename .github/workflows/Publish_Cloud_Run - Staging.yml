name: Staging - Deploy to Cloud Run

on:
  workflow_run:
    workflows: ["Build and Publish Docker Image"]
    types:
      - completed


# General Environments variables
env:
  # Google Cloud Env
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_ZONE: ${{ secrets.GCP_ZONE }}

  # Cloud SQL Env
  SQL_INST: ${{ secrets.SQL_INST_STAGING }}
  DB_READ: ${{ secrets.DB_READ_STAGING }}
  DB_USER: ${{ secrets.DB_USER_STAGING }}
  DB_PASS: ${{ secrets.DB_PASS_STAGING }}
  SQL_INST_PG: ${{ secrets.SQL_INST_PG_STAGING }}
  DB_NAME_PG: ${{ secrets.DB_NAME_PG_STAGING }}
  DB_USER_PG: ${{ secrets.DB_USER_PG_STAGING }}
  DB_PASS_PG: ${{ secrets.DB_PASS_PG_STAGING }}
  DEEPL_KEY: ${{ secrets.DEEPL_KEY }}
  DEEP_IA_KEY: ${{ secrets.DEEP_IA_KEY }}
  # Image Env
  IMAGE: app-du-milieu
  TAG: build

jobs:
  Deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    # Setup gcloud CLI
    - name: Set up Cloud credentials
      uses: google-github-actions/setup-gcloud@master
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true

    - name : Deploy Cloud Run
      run : |-
        gcloud run deploy app-du-milieu-staging \
        --image eu.gcr.io/$GCP_PROJECT_ID/$IMAGE:$TAG \
        --platform managed \
        --region $GCP_ZONE \
        --allow-unauthenticated \
        --ingress internal-and-cloud-load-balancing \
        --memory 512Mi \
        --cpu 1 \
        --set-cloudsql-instances=$SQL_INST,$SQL_INST_PG \
        --set-env-vars=DB_USER=$DB_USER,DB_PASS=$DB_PASS,DB_READ=$DB_READ,CLOUDSQL_CONN=$GCP_PROJECT_ID:$GCP_ZONE:$SQL_INST,DB_USER_PG=$DB_USER_PG,DB_PASS_PG=$DB_PASS_PG,DB_NAME_PG=$DB_NAME_PG,CLOUDSQL_CONN_PG=$GCP_PROJECT_ID:$GCP_ZONE:$SQL_INST_PG,DEEP_IA_KEY:$DEEP_IA_KEY,DEEPL_KEY:$DEEPL_KEY
